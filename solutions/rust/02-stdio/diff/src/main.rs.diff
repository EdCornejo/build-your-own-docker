@@ -1,26 +1,24 @@
 use anyhow::{Context, Result};
+use std::env::args;
+use std::process::{Command, Stdio};

 // Usage: your_docker.sh run <image> <command> <arg1> <arg2> ...
 fn main() -> Result<()> {
-    let args: Vec<_> = std::env::args().collect();
+    let args: Vec<_> = args().collect();
     let command = &args[3];
     let command_args = &args[4..];
-    let output = std::process::Command::new(command)
+    let mut child = Command::new(command)
         .args(command_args)
-        .output()
+        .stdin(Stdio::null())
+        .spawn()
         .with_context(|| {
             format!(
                 "Tried to run '{}' with arguments {:?}",
                 command, command_args
             )
         })?;

-    if output.status.success() {
-        let std_out = std::str::from_utf8(&output.stdout)?;
-        println!("{}", std_out);
-    } else {
-        std::process::exit(1);
-    }
+    child.wait()?;

     Ok(())
 }
